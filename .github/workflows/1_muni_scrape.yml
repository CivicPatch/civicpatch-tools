name: 1. ⚙️ - Municipal Officials - Scrape

on:
  workflow_dispatch:
    inputs:
      state:
        description: 'Pick a state to pick up new cities for processing'
        type: choice
        required: true
        options:
          - nh
          - or
          - wa
      num_municipalities:
        description: 'Number of cities to process'
        type: number
        required: true
        default: 2

jobs:
  get_municipalities_from_queue:
    environment: env-${{ github.actor }}

    runs-on: ubuntu-latest
    outputs:
      municipalities: ${{ steps.set-municipalities.outputs.municipalities }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'
      
      - name: Build go task
        run: |
          cd ./civpatch_cli
          go build -o bin/cli

      - name: Get scrape candidates from queue
        id: set-municipalities
        run: |
          ls -la
          # Load the municipalities queue file and take the first N municipalities
          # and ignore municipalities that already have PRs open
          geoids_to_ignore=$(gh pr list --state open --json headRefName --search "head:pipeline-municipal-scrapes-${{ github.event.inputs.state }}-" --template '{{range .}}{{.headRefName}} {{end}}')

          # Extract GEOIDs from branch names like pipeline-municipal-scrapes-wa-king-federal_way-2410494-14096425230
          geoids=$(echo $geoids_to_ignore | sed -E 's/pipeline-municipal-scrapes-[^-]+-[^-]+-[^-]+-([^-]+)-[0-9]+/\1/g')

          # Now the rake task returns JSON array of objects
          cmd="./civpatch_cli/bin/cli scrape -plan -state ${{ github.event.inputs.state }} -num-scrapes ${{ github.event.inputs.num_municipalities }}"

          if [ -n "$geoids" ]; then
            cmd="$cmd -geoids-to-ignore $geoids"
          fi

          municipalities_json=$($cmd)

          # Output the JSON directly since it's already in the correct format
          echo "municipalities=$municipalities_json" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  populate_city_directory:
    environment: env-${{ github.actor }}
    timeout-minutes: 15
    needs: get_municipalities_from_queue
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        municipality_entry: ${{ fromJson(needs.get_municipalities_from_queue.outputs.municipalities) }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.3'
      
      - name: Build go task
        run: |
          cd ./civpatch_cli
          go build -o bin/cli

      - name: Generate GitHub App Token
        id: generate-pipeline-token
        uses: actions/create-github-app-token@v2
        with:
            app-id: ${{ secrets.GH_APP_BOT_PIPELINE_APP_ID }}
            private-key: ${{ secrets.GH_APP_BOT_PIPELINE_PRIVATE_KEY }}

      - name: Scrape municipal officials
        env:
          GITHUB_USERNAME: civic-patch-pipeline-bot
          GITHUB_TOKEN: ${{ steps.generate-pipeline-token.outputs.token }}
          OPENAI_TOKEN: ${{ secrets.OPENAI_TOKEN }}
          BRAVE_TOKEN: ${{ secrets.BRAVE_TOKEN }}
          GOOGLE_GEMINI_TOKEN: ${{ secrets.GOOGLE_GEMINI_TOKEN }}
          GOOGLE_SEARCH_API_KEY: ${{ secrets.GOOGLE_SEARCH_API_KEY }}
          GOOGLE_SEARCH_ENGINE_ID: ${{ secrets.GOOGLE_SEARCH_ENGINE_ID }}
          GOOGLE_SHEETS_SPREADSHEET_ID: ${{ secrets.GOOGLE_SHEETS_SPREADSHEET_ID }}
          GOOGLE_SHEETS_CLIENT_ID: ${{ secrets.GOOGLE_SHEETS_CLIENT_ID }}
          GOOGLE_SHEETS_CLIENT_SECRET: ${{ secrets.GOOGLE_SHEETS_CLIENT_SECRET }}
          GOOGLE_SHEETS_REFRESH_TOKEN: ${{ secrets.GOOGLE_SHEETS_REFRESH_TOKEN }}
        run: |
          echo "Processing municipality: ${{ matrix.municipality_entry.geoid }}"
          ./civpatch_cli/bin/cli scrape -run \
            -state ${{ github.event.inputs.state }} \
            -geoid ${{ matrix.municipality_entry.geoid }} \
            -github-env env-${{ github.actor }} \
            -create-pr -with-ci -send-costs
