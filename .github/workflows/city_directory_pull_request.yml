name: Validate City Directory

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - 'pipeline-city-scrapes-*'  # âœ… Only runs on matching branches

permissions:
  pull-requests: write

jobs: 
  comment_and_validate:
    runs-on: ubuntu-latest

    steps:  
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.2'
          bundler-cache: true

      - name: Install dependencies
        run: |
          bundle install

      - name: Extract State and GNIS ID from Branch Name
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          STATE=$(echo "$BRANCH_NAME" | awk -F'-' '{print $4}')
          GNIS_ID=$(echo "$BRANCH_NAME" | awk -F'-' '{print $(NF-1)}')
  
          echo "STATE=$STATE" >> $GITHUB_ENV
          echo "GNIS_ID=$GNIS_ID" >> $GITHUB_ENV
  
      - name: Comment on PR (Scraped Data)
        id: generate_markdown
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          {
            echo 'markdown_content<<DELIMITER_EOF'
            bundle exec rake "github_pipeline:get_pr_comment[${{ env.STATE }},${{ env.GNIS_ID }},${{ env.BRANCH_NAME }}]"
            echo 'DELIMITER_EOF'
          } >> $GITHUB_ENV
          gh pr comment ${{ github.event.pull_request.number }} --body "${{ env.markdown_content }}"
      
      - name: Run City Directory Validation (Trusted Source)
        id: validate
        run: |
          echo "Running validation..."
          SOURCE_VALIDATION_RESPONSE=$(bundle exec rake validate_city_directory[${{ env.STATE }},${{ env.GNIS_ID }}])
          echo "Validation response: $SOURCE_VALIDATION_RESPONSE"

          # Parse JSON output from Rake
          SOURCE_VALIDATION_APPROVE=$(echo "$SOURCE_VALIDATION_RESPONSE" | jq -r '.approve')
          SOURCE_VALIDATION_COMMENT=$(echo "$SOURCE_VALIDATION_RESPONSE" | jq -r '.comment')

          echo "SOURCE_VALIDATION_APPROVE=$SOURCE_VALIDATION_APPROVE" >> "$GITHUB_ENV"
          echo "SOURCE_VALIDATION_COMMENT<<EOF" >> "$GITHUB_ENV"
          echo "$SOURCE_VALIDATION_COMMENT" >> "$GITHUB_ENV"
          echo "EOF" >> "$GITHUB_ENV"

      - name: Comment on PR - Validation Step (Trusted Source)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "$SOURCE_VALIDATION_APPROVE" == "true" ]]; then
            gh pr review ${{ github.event.pull_request.number }} --approve --body "$SOURCE_VALIDATION_COMMENT"
          else
            gh pr comment ${{ github.event.pull_request.number }} --body "$SOURCE_VALIDATION_COMMENT"
          fi 
