name: Pull Request - City Config Change

on:
  pull_request:
    types:
      - opened
      - synchronize
    paths:
      - '**/config.yml'

jobs:
  validate-changes:
    runs-on: ubuntu-latest
    outputs:
      should-continue: ${{ steps.check-files.outputs.should-continue }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Only run workflow if latest commit is solely a config.yml change

      - name: Check for solo config.yml commit
        id: check-files
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          TOTAL_FILES=$(echo "$CHANGED_FILES" | wc -l)
          CONFIG_FILES=$(echo "$CHANGED_FILES" | grep -c "config\.yml$" || echo "0")

          if [[ $TOTAL_FILES -eq 1 && $CONFIG_FILES -eq 1 ]]; then
            echo "Only one config.yml file was changed, continuing"
            echo "should-continue=true" >> $GITHUB_OUTPUT
          else
            echo "Either multiple files were changed or no config.yml was modified, skipping"
            echo "Total files changed: $TOTAL_FILES"
            echo "Config files changed: $CONFIG_FILES"
            echo "Changed files:"
            echo "$CHANGED_FILES"
            echo "should-continue=false" >> $GITHUB_OUTPUT
          fi
  
  run-pipeline-city-fetch:
    needs: validate-changes
    if: needs.validate-changes.outputs.should-continue == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.2'
          bundler-cache: true
      
      - name: Generate GitHub App Token
        id: generate-civicpatch-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.GH_APP_BOT_APP_ID }}
          private-key: ${{ secrets.GH_APP_BOT_PRIVATE_KEY }}

      - name: Install dependencies
        run: |
          bundle install

      - name: Extract State and GNIS ID from Branch Name
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          STATE=$(echo "$BRANCH_NAME" | awk -F'-' '{print $4}')
          GNIS=$(echo "$BRANCH_NAME" | awk -F'-' '{print $6}')

          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "STATE=$STATE" >> $GITHUB_ENV
          echo "GNIS=$GNIS" >> $GITHUB_ENV

      - name: Scrape City
        run: |
          bundle exec rake city_scrape:fetch[${{ env.STATE }},${{ env.GNIS }}]
      
      - name: Commit Changes to current branch
        env:
          GITHUB_TOKEN: ${{ steps.generate-civicpatch-token.outputs.token }}
        run: |
          git add .
          git commit -m "Config changes for ${{ env.BRANCH_NAME }}"
          git push
          
